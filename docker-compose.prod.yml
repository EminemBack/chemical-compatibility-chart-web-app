services:
  postgres:
    image: postgres:15-alpine
    container_name: kinross-chemical-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - kinross-network

  redis:
    image: redis:7-alpine
    container_name: kinross-chemical-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - kinross-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: kinross-chemical-api
    restart: unless-stopped
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - CORS_ORIGINS=${CORS_ORIGINS_PROD}
      - API_HOST=0.0.0.0
      - API_PORT=8000
      # SMTP configuration
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - NOTIFICATION_FROM_EMAIL=${NOTIFICATION_FROM_EMAIL}
      # JWT Configuration
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - PRODUCTION=true
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - kinross-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod  # USE PRODUCTION DOCKERFILE
    container_name: kinross-chemical-web
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - kinross-network

volumes:
  postgres_data:
  redis_data:

networks:
  kinross-network:
    driver: bridge